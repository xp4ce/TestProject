

name: CI-CD
env:
  S3_BACKET_NAME      : "xpace-flask"
  EB_APPLICATION_NAME : "MyFlask"
  EB_ENVIRONMENT_NAME : "MyFlask-env"
  DEPLOY_PACKAGE_NAME : "flask_app_${{ github.sha }}.zip" 
  AWS_REGION_NAME     : "eu-north-1"      
   
  

on:
  push:
    branches: 
     - master
     
     
jobs:
  my_ci_part:
    runs-on : ubuntu-latest

    
    steps:
      - uses: actions/checkout@v1
        name: Git clone our Repo
      
      - name: Create ZIP package
        run : zip -r ${{ env.DEPLOY_PACKAGE_NAME }} ./ -x *.git*
        
      - name: Configure AWS 
        uses: aws-actions/configure-aws-credentials@v1
        with:
           aws-access-key-id     :  ${{ secrets.MY_AWS_ACCESS_KEY }}
           aws-secret-access-key :  ${{ secrets.MY_AWS_SECRET_KEY }}
           aws-region            :  ${{ env.AWS_REGION_NAME }}
      
      
      - name : Copy Deployment to S3 bucket
        run  : aws s3 cp ${{ env.DEPLOY_PACKAGE_NAME}} s3://${{ env.S3_BACKET_NAME }}/
         
      
      - name  : Happy Message to CI, finish
        run   : echo "CI yes! pipleline succesfully!"
        
        
  my_cd_part:
   runs-on : ubuntu-latest
   needs   : [my_ci_part]

   steps: 
      - name: Configure AWS 
        uses: aws-actions/configure-aws-credentials@v1
        with:
           aws-access-key-id     :  ${{ secrets.MY_AWS_ACCESS_KEY }}
           aws-secret-access-key :  ${{ secrets.MY_AWS_SECRET_KEY }}
           aws-region            :  ${{ env.AWS_REGION_NAME }}
           
           
      - name: Create new ElasticBeanstalk Application
        run : |
          aws elasticbeanstalk create-application-version \
          --application-name ${{ env.EB_APPLICATION_NAME }} \
          --source-bundle S3Bucket="${{ env.S3_BACKET_NAME }}",S3Key="${{ env.DEPLOY_PACKAGE_NAME }}" \
          --version-label "Ver-${{ github.sha }}" \
          --description "CommitSHA-${{ github.sha }}" 
          
      - name: Deploy New Elastic Beanstalk Version
        run : aws elasticbeanstalk update-environment --environment-name ${{ env.EB_ENVIRONMENT_NAME  }} --version-label "Ver-${{ github.sha }}"
        
      - name  : Happy Message to CD, finish
        run   : echo "CD yes! pipleline succesfully!"
    
    
        
    
